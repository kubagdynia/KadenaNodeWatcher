apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          volumeMounts:
            - name: nginx-html
              mountPath: /usr/share/nginx/html
              readOnly: true
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
          ports:
            - containerPort: 80
      volumes:
      - name: nginx-html
        hostPath:
          # /run/desktop/mnt/host/ is the path to the root of the host machine in Docker Desktop (wsl2) for Windows.
          path: /run/desktop/mnt/host/d/Dev/MyProjects/KadenaNodeWatcher/infra/kadenanodewatcher-k8s/nginx/html
          type: Directory
      - name: nginx-conf
        hostPath:
          # /run/desktop/mnt/host/ is the path to the root of the host machine in Docker Desktop (wsl2) for Windows.
          path: /run/desktop/mnt/host/d/Dev/MyProjects/KadenaNodeWatcher/infra/kadenanodewatcher-k8s/nginx/nginx.conf
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi-deployment
  labels:
    app: webapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapi
  template:
    metadata:
      labels:
        app: webapi
    spec:
      initContainers:
        - name: wait-for-cache
          image: busybox
          command: ['sh', '-c', 'until nc -z cache-service 6379; do echo waiting for cache; sleep 5; done;']
        - name: set-permissions-for-logs-dir-on-host
          image: busybox
          command: [ 'sh', '-c', 'chmod -R 777 /host' ]
          volumeMounts:
            - name: logs
              mountPath: /host
      containers:
        - name: webapi
          image: devkaptain/kadenanodewatcher-api:v6
          volumeMounts:
            - name: data-db
              mountPath: /app/data/db
            - name: logs
              mountPath: /app/infra/logs
          env:
            - name: CONNECTIONSTRINGS__RedisCache
              value: "cache-service:6379,password=redis123##!!"
      volumes:
        - name: data-db       
          hostPath:
            path: /run/desktop/mnt/host/d/Dev/MyProjects/KadenaNodeWatcher/data/db
            type: Directory
        - name: logs
          hostPath:
            path: /run/desktop/mnt/host/d/Dev/MyProjects/KadenaNodeWatcher/infra/logs
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: webapi-service
spec:
  type: NodePort
  selector:
    app: webapi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-deployment
  labels:
    app: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
        - name: redis
          image: redis:latest
          args: ["redis-server", "--requirepass", "redis123##!!"]
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: cache-service
spec:
  type: ClusterIP
  selector:
    app: cache
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379